//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package br.net.paulofernando.pessoasinspiradoras.view;

import android.app.Activity;
import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import br.net.paulofernando.pessoasinspiradoras.R.id;
import br.net.paulofernando.pessoasinspiradoras.R.layout;
import br.net.paulofernando.pessoasinspiradoras.model.InspiracaoEntity;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class InspirationView_
    extends InspirationView
{

    private Context context_;
    private boolean mAlreadyInflated_ = false;

    public InspirationView_(InspiracaoEntity inspirationEntity, Context context) {
        super(inspirationEntity, context);
        init_();
    }

    public InspirationView_(Context context, AttributeSet attrs) {
        super(context, attrs);
        init_();
    }

    private void init_() {
        context_ = getContext();
        if (context_ instanceof Activity) {
            Activity activity = ((Activity) context_);
        }
    }

    private void afterSetContentView_() {
        btDeleteInspiration = ((ImageView) findViewById(id.bt_delete_inspiration));
        btShareInspiration = ((ImageView) findViewById(id.bt_share_inspiration));
        inspiration = ((TextView) findViewById(id.inspiration));
        insideMenu = ((RelativeLayout) findViewById(id.inside_menu_inspiration));
        marker = ((ImageView) findViewById(id.inspiration_marker));
        btEditInspiration = ((ImageView) findViewById(id.bt_edit_inpiration));
        btBackInspiration = ((ImageView) findViewById(id.bt_back_inpiration));
        component = ((RelativeLayout) findViewById(id.componentInspirationView));
        {
            View view = findViewById(id.bt_back_inpiration);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        InspirationView_.this.btBackInspiration();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.bt_edit_inpiration);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        InspirationView_.this.btEditInspiration();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.bt_delete_inspiration);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        InspirationView_.this.btDeleteClicked();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.bt_share_inspiration);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        InspirationView_.this.btShareClicked();
                    }

                }
                );
            }
        }
        init();
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!mAlreadyInflated_) {
            mAlreadyInflated_ = true;
            inflate(getContext(), layout.view_inpiration, this);
            afterSetContentView_();
        }
        super.onFinishInflate();
    }

    public static InspirationView build(InspiracaoEntity inspirationEntity, Context context) {
        InspirationView_ instance = new InspirationView_(inspirationEntity, context);
        instance.onFinishInflate();
        return instance;
    }

    public static InspirationView build(Context context, AttributeSet attrs) {
        InspirationView_ instance = new InspirationView_(context, attrs);
        instance.onFinishInflate();
        return instance;
    }

}
